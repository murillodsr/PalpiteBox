{"ast":null,"code":"import { GoogleSpreadsheet } from 'google-spreadsheet';\nimport moment from 'moment';\nimport credentials from '../../credentials.json';\nconst doc = new GoogleSpreadsheet('100CYyLU2vRxRrY2CZLK9u0pNXP53UoTVIiT9fAw8lTM'); //função gerar codigo com moment\n\nconst genCupom = () => {\n  const code = parseInt(moment().format('YYMMDDHHmmssSSS')).toString(16).toUpperCase();\n  return code.substr(0, 4) + '-' + code.substr(4, 4) + '-' + code.substr(8, 4);\n};\n\nexport default (async (req, res) => {\n  try {\n    await doc.useServiceAccountAuth(credentials);\n    await doc.loadInfo();\n    const sheet = doc.sheetsByIndex[1];\n    const data = JSON.parse(req.body);\n    const sheetConfig = doc.sheetsByIndex[2];\n    await sheetConfig.loadCells('A4:B4');\n    const mostrarPromocaoCell = sheetConfig.getCell(3, 0);\n    const textoCell = sheetConfig.getCell(3, 1);\n    let Cupom = '';\n    let Promo = '';\n\n    if (mostrarPromocaoCell.value === 'VERDADEIRO') {\n      // TODO gerar cupom\n      Cupom = genCupom();\n      Promo = textoCell.value;\n    }\n\n    await sheet.addRow({\n      Nome: data.Nome,\n      email: data.email,\n      whats: data.whats,\n      'Data Preenchimento': moment().format('DD/MM/YYYY, HH:mm:ss'),\n      Cupom,\n      Promo,\n      Nota: 5\n    });\n    res.end(req.body);\n  } catch (err) {\n    console.log(err);\n    res.end('error');\n  }\n});","map":{"version":3,"sources":["E:/dev/projeto1DevPleno/pages/api/save.js"],"names":["GoogleSpreadsheet","moment","credentials","doc","genCupom","code","parseInt","format","toString","toUpperCase","substr","req","res","useServiceAccountAuth","loadInfo","sheet","sheetsByIndex","data","JSON","parse","body","sheetConfig","loadCells","mostrarPromocaoCell","getCell","textoCell","Cupom","Promo","value","addRow","Nome","email","whats","Nota","end","err","console","log"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,GAAG,GAAG,IAAIH,iBAAJ,CAAsB,8CAAtB,CAAZ,C,CAEA;;AACA,MAAMI,QAAQ,GAAG,MAAM;AACrB,QAAMC,IAAI,GAAGC,QAAQ,CAACL,MAAM,GAAGM,MAAT,CAAgB,iBAAhB,CAAD,CAAR,CAA6CC,QAA7C,CAAsD,EAAtD,EAA0DC,WAA1D,EAAb;AACA,SAAOJ,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAe,CAAf,IAAoB,GAApB,GAA0BL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAe,CAAf,CAA1B,GAA8C,GAA9C,GAAoDL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAe,CAAf,CAA3D;AACD,CAHD;;AAKA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAI;AACF,UAAMT,GAAG,CAACU,qBAAJ,CAA0BX,WAA1B,CAAN;AACA,UAAMC,GAAG,CAACW,QAAJ,EAAN;AACA,UAAMC,KAAK,GAAGZ,GAAG,CAACa,aAAJ,CAAkB,CAAlB,CAAd;AACA,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACS,IAAf,CAAb;AAEA,UAAMC,WAAW,GAAGlB,GAAG,CAACa,aAAJ,CAAkB,CAAlB,CAApB;AACA,UAAMK,WAAW,CAACC,SAAZ,CAAsB,OAAtB,CAAN;AAEA,UAAMC,mBAAmB,GAAGF,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,CAA5B;AACA,UAAMC,SAAS,GAAGJ,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,CAAlB;AAEA,QAAIE,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAIJ,mBAAmB,CAACK,KAApB,KAA8B,YAAlC,EAAgD;AAC9C;AACAF,MAAAA,KAAK,GAAGtB,QAAQ,EAAhB;AACAuB,MAAAA,KAAK,GAAGF,SAAS,CAACG,KAAlB;AACD;;AAED,UAAMb,KAAK,CAACc,MAAN,CAAa;AACjBC,MAAAA,IAAI,EAAEb,IAAI,CAACa,IADM;AAEjBC,MAAAA,KAAK,EAAEd,IAAI,CAACc,KAFK;AAGjBC,MAAAA,KAAK,EAAEf,IAAI,CAACe,KAHK;AAIjB,4BAAsB/B,MAAM,GAAGM,MAAT,CAAgB,sBAAhB,CAJL;AAKjBmB,MAAAA,KALiB;AAMjBC,MAAAA,KANiB;AAOjBM,MAAAA,IAAI,EAAE;AAPW,KAAb,CAAN;AASArB,IAAAA,GAAG,CAACsB,GAAJ,CAAQvB,GAAG,CAACS,IAAZ;AACD,GA9BD,CA8BE,OAAOe,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAvB,IAAAA,GAAG,CAACsB,GAAJ,CAAQ,OAAR;AACD;AACF,CAnCD","sourcesContent":["import { GoogleSpreadsheet } from 'google-spreadsheet'\r\nimport moment from 'moment'\r\nimport credentials from '../../credentials.json'\r\n\r\nconst doc = new GoogleSpreadsheet('100CYyLU2vRxRrY2CZLK9u0pNXP53UoTVIiT9fAw8lTM')\r\n\r\n//função gerar codigo com moment\r\nconst genCupom = () => {\r\n  const code = parseInt(moment().format('YYMMDDHHmmssSSS')).toString(16).toUpperCase()\r\n  return code.substr(0, 4) + '-' + code.substr(4, 4) + '-' + code.substr(8, 4)\r\n}\r\n\r\nexport default async (req, res) => {\r\n  try {\r\n    await doc.useServiceAccountAuth(credentials)\r\n    await doc.loadInfo()\r\n    const sheet = doc.sheetsByIndex[1]\r\n    const data = JSON.parse(req.body)\r\n\r\n    const sheetConfig = doc.sheetsByIndex[2]\r\n    await sheetConfig.loadCells('A4:B4')\r\n\r\n    const mostrarPromocaoCell = sheetConfig.getCell(3, 0)\r\n    const textoCell = sheetConfig.getCell(3, 1)\r\n\r\n    let Cupom = ''\r\n    let Promo = ''\r\n    if (mostrarPromocaoCell.value === 'VERDADEIRO') {\r\n      // TODO gerar cupom\r\n      Cupom = genCupom()\r\n      Promo = textoCell.value\r\n    }\r\n\r\n    await sheet.addRow({\r\n      Nome: data.Nome,\r\n      email: data.email,\r\n      whats: data.whats,\r\n      'Data Preenchimento': moment().format('DD/MM/YYYY, HH:mm:ss'),\r\n      Cupom,\r\n      Promo,\r\n      Nota: 5\r\n    })\r\n    res.end(req.body)\r\n  } catch (err) {\r\n    console.log(err)\r\n    res.end('error')\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}